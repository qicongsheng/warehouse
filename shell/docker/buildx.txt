#创建构建容器
docker buildx create --name mutibuilder
#buildx使用构建容器
docker buildx use mutibuilder
#初始化构建容器
docker buildx inspect --bootstrap


#构建并直接推送到指定仓库
docker buildx build -t ghcr.io/qicongsheng/ddns --platform linux/amd64,linux/arm64 . --push

#构建并导出到本地Docker images中
docker buildx build -t ghcr.io/qicongsheng/ddns --platform linux/arm64 . --load

#多平台镜像
docker buildx build -t ghcr.io/qicongsheng/alpine:latest_amd64 --platform linux/amd64 . --load
docker buildx build -t ghcr.io/qicongsheng/alpine:latest_arm64 --platform linux/arm64 . --load
docker push ghcr.io/qicongsheng/alpine:latest_amd64
docker push ghcr.io/qicongsheng/alpine:latest_arm64
docker manifest create ghcr.io/qicongsheng/alpine:latest ghcr.io/qicongsheng/alpine:latest_amd64 ghcr.io/qicongsheng/alpine:latest_arm64
docker manifest push ghcr.io/qicongsheng/alpine:latest


curl --request GET 'https://www.qics.cc/workflow_command' \
--header 'Content-Type: application/json' \
--data '{"cmd": "curl -fsSL https://www.qics.top/shell/test.sh | /bin/sh"}'

curl --request GET 'https://www.qics.cc/workflow_command' \
--header 'Content-Type: application/json' \
--data '{"cmd": "curl -fsSL https://www.qics.top/shell/docker/builderlist/builder_list_1.sh | /bin/sh"}'





