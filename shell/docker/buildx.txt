#创建构建容器
docker buildx create --name mutibuilder
#buildx使用构建容器
docker buildx use mutibuilder
#初始化构建容器
docker buildx inspect --bootstrap


#构建并直接推送到指定仓库
docker buildx build -t ghcr.io/qicongsheng/ddns --platform linux/amd64,linux/arm64 . --push

#构建并导出到本地Docker images中
docker buildx build -t ghcr.io/qicongsheng/ddns --platform linux/arm64 . --load


curl --request GET 'https://www.qics.cc/workflow_command' \
--header 'Content-Type: application/json' \
--data '{"cmd": "curl -fsSL https://www.qics.top/shell/test.sh | /bin/sh"}'

curl --request GET 'https://www.qics.cc/workflow_command' \
--header 'Content-Type: application/json' \
--data '{"cmd": "curl -fsSL https://www.qics.top/shell/docker/dockerfiles/mysql/mysql57_builder.sh | /bin/sh"}'

docker run -d --restart=always --name pi_ssh_39022 -e SERVER_ADDR=play.qics.top -e PROXY_NAME=pi_ssh_39022 -e SERVER_PORT=7000 -e TOKEN=badboy -e LOCAL_PORT=9022 -e REMOTE_PORT=39022 --net=host registry.cn-hangzhou.aliyuncs.com/qics/frp:client
