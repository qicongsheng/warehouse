Usage

docker run -d \
    -p 21:21 \
    -p 21000-21010:21000-21010 \
    -e USERS="one|1234" \
    -e ADDRESS=ftp.site.domain \
    delfer/alpine-ftp-server

Configuration

Environment variables:

USERS - space and | separated list (optional, default: alpineftp|alpineftp)
    format name1|password1|[folder1][|uid1] name2|password2|[folder2][|uid2]

ADDRESS - external address witch clients can connect passive ports (optional, should resolve to ftp server ip address)

MIN_PORT - minimum port number to be used for passive connections (optional, default 21000)
MAX_PORT - maximum port number to be used for passive connections (optional, default 21010)

USERS examples

    user|password foo|bar|/home/foo
    user|password|/home/user/dir|10000
    user|password||10000

FTPS (File Transfer Protocol + SSL) Example
Issue free Let's Encrypt certificate and use it with alpine-ftp-server.

mkdir -p /etc/letsencrypt
docker run -it --rm \
    -p 80:80 \
    -v "/etc/letsencrypt:/etc/letsencrypt" \
    certbot/certbot certonly \
    --standalone \
    --preferred-challenges http \
    -n --agree-tos \
    --email i@delfer.ru
    -d ftp.site.domain
docker run -d \
    --name ftp \
    -p 21:21 \
    -p 21000-21010:21000-21010 \
    -e USERS="one|1234" \
    -e ADDRESS=ftp.site.domain \
    -e TLS_CERT="/etc/letsencrypt/live/vds2291318.my-ihor.ru/fullchain.pem" \
    -e TLS_KEY="/etc/letsencrypt/live/vds2291318.my-ihor.ru/privkey.pem" \
    delfer/alpine-ftp-server

Do not forget to replace ftp.site.domain with actual domain pointing to your server's IP.
Be shure you have avalible port 80 for standalone mode of certbot to issue certificate.
Do not forget to renew certificate in 3 month with certbot renew command.